import sys
input = sys.stdin.readline

n, m = map(int, input().split())

arr = [list(map(int, input().split())) for _ in range(n)]

mino = [
    [(0,0),(0,1),(0,2),(0,3)], # ㅡ
    [(0,0),(1,0),(2,0),(3,0)], # ㅣ
    [(0,0),(0,1),(1,0),(1,1)], # ㅁ
    [(0,0),(1,0),(2,0),(2,1)], # ㄴㅡ
    [(0,1),(1,1),(2,1),(2,0)], #L거울
    [(0,0),(0,1),(1,0),(2,0)], #
    [(0,0),(0,1),(1,1),(2,1)],
    [(0,0),(1,0),(1,1),(1,2)],
    [(0,2),(1,0),(1,1),(1,2)],
    [(0,0),(0,1),(0,2),(1,0)], # 10
    [(0,0),(0,1),(0,2),(1,2)], # ㅡㄱ
    [(0,0),(1,0),(1,1),(2,1)],
    [(1,0),(1,1),(0,1),(0,2)],
    [(0,1),(1,0),(1,1),(2,0)],
    [(0,0),(0,1),(1,1),(1,2)],
    [(0,0),(0,1),(0,2),(1,1)],
    [(0,1),(1,0),(1,1),(1,2)],
    [(0,1),(1,0),(1,1),(2,1)],
    [(0,0),(1,0),(2,0),(1,1)]
]

res = 0

for r in range(n): #행
    for c in range(m): #열
        for shape in mino: # 한 모양씩 뺌 -> [(0,0),(0,1),(0,2),(0,3)]
            shape_sum = 0
            for dr, dc in shape: # 힌 칸을 확인. 이 칸이 범위 내인지? 한 칸의 값을 구하기 위해.. 
                if 0<= dr+r < n and 0 <= dc+c <m:
                    # 범위 내면
                    shape_sum += arr[dr+r][dc+c]
                else:
                    shape_sum = 0
                    break
                
            res = max(shape_sum, res)
print(res)